services:
  # Backend service with hot reloading for development
  backend:
    build:
      context: ../../
      dockerfile: backend-e2e/docker/backend.dev.Dockerfile
    environment:
      - PUID=${USER_ID:-1001}
      - PGID=${GROUP_ID:-1001}
      - PORT=3000
      - NODE_ENV=development
      - RATE_LIMIT_TEST_MODE=true
      - TMDB_API_URL=http://tmdb-mock/3
      - YTS_API_URL=http://yts-mock
      - TRAKT_API_URL=http://trakt-mock
      - THE_RARBG_API_URL=http://therarbg-mock
      - DISABLE_VPN_CHECK=true
      - DISABLE_DISCOVERY=true
      - STATIC_TRACKERS=udp://tracker-mock
      - BEST_TRACKERS_DOWNLOAD_URL=http://tracker-list-mock/trackers_best.txt
      - BLACKLISTED_TRACKERS_DOWNLOAD_URL=http://tracker-list-mock/blacklist.txt
      - DOWNLOAD_PATH=/usr/src/app/downloads
      - ENABLE_TRACING=true
      - DEBUG=*,-require-in-the-middle
      - DISABLE_BACKGROUND_TASKS=true
      - FRONTEND_DIR=/usr/src/app/public
    networks:
      - test-network
    ports:
      - '${PORT:-3000}:3000'
    volumes:
      # Mount the backend source code for hot reloading
      - ../../backend/src:/usr/src/app/backend/src:ro
      - ../../backend/package.json:/usr/src/app/backend/package.json:ro
      - ../../backend/tsconfig.json:/usr/src/app/backend/tsconfig.json:ro
      # Fresh database for each development session
      - dev_database:/usr/src/app/data
      - dev_downloads:/usr/src/app/downloads
      - ../../traces:/tmp:rw
      # Mount built frontend to be served as static assets
      - ../../dist/frontend:/usr/src/app/public:ro
    healthcheck:
      test: ['CMD', 'curl', '-f', '-s', '-o', '/dev/null', 'http://localhost:3000/api/health']
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 10s
    depends_on:
      tmdb-mock:
        condition: service_healthy
      yts-mock:
        condition: service_healthy
      trakt-mock:
        condition: service_healthy
      therarbg-mock:
        condition: service_healthy

  # TMDB Mock Service
  tmdb-mock:
    build:
      context: mock
      dockerfile: tmdb.Dockerfile
    user: '${USER_ID:-1000}:${GROUP_ID:-1000}'
    environment:
      - DATA_DIR=/app/data
      - API_BASE_URL=https://api.themoviedb.org/3
      - API_AUTH_HEADER_IS_BEARER=true
      - API_KEY=$TMDB_API_ACCESS_TOKEN
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:80/health']
      interval: 0.5s
      timeout: 2s
      retries: 30
      start_period: 10s
    volumes:
      - ./tmdb/data:/app/data
    networks:
      - test-network

  # Trakt Mock Service
  trakt-mock:
    build:
      context: mock
      dockerfile: trakt.Dockerfile
    user: '${USER_ID:-1000}:${GROUP_ID:-1000}'
    environment:
      - DATA_DIR=/app/data
      - API_BASE_URL=https://api.trakt.tv
      - API_AUTH_HEADER=trakt-api-key
      - API_AUTH_HEADER_IS_BEARER=false
      - API_KEY=$TRAKT_CLIENT_ID
      - API_SECRET=$TRAKT_CLIENT_SECRET
      - |
        API_HEADERS={"trakt-api-version": "2"}
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:80/health']
      interval: 0.5s
      timeout: 2s
      retries: 30
      start_period: 10s
    volumes:
      - ./trakt/data:/app/data
    networks:
      - test-network

  # YTS Mock Service
  yts-mock:
    build:
      context: .
      dockerfile: mock/yts.Dockerfile
    user: '${USER_ID:-1000}:${GROUP_ID:-1000}'
    environment:
      - DATA_DIR=/app/data
      - API_BASE_URL=https://yts.mx/api/v2
      - API_AUTH_HEADER_IS_BEARER=false
      - API_KEY=none
      - OWN_URL=http://yts-mock
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:80/health']
      interval: 0.5s
      timeout: 2s
      retries: 30
      start_period: 10s
    volumes:
      - ./yts/data:/app/data
    networks:
      - test-network

  # TheRARBG Mock Service
  therarbg-mock:
    build:
      context: .
      dockerfile: mock/therarbg.Dockerfile
    user: '${USER_ID:-1000}:${GROUP_ID:-1000}'
    environment:
      - DATA_DIR=/app/data
      - API_BASE_URL=https://therarbg.to
      - API_AUTH_HEADER_IS_BEARER=false
      - API_KEY=none
      - OWN_URL=http://therarbg-mock
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:80/health']
      interval: 0.5s
      timeout: 2s
      retries: 30
      start_period: 10s
    volumes:
      - ./therarbg/data:/app/data
    networks:
      - test-network

networks:
  test-network:
    driver: bridge

volumes:
  dev_database:
    name: miauflix_dev_database
  dev_downloads:
    name: miauflix_dev_downloads
