services:
  # Backend service
  backend:
    build:
      context: ../../
      dockerfile: backend.Dockerfile
    environment:
      - PORT=3000
      - NODE_ENV=test
      - RATE_LIMIT_TEST_MODE=true
      - TMDB_API_URL=http://tmdb-mock/3
      - YTS_API_URL=http://yts-mock
      - TRAKT_API_URL=http://trakt-mock
      - DEBUG=*
    networks:
      - test-network
    ports:
      - '${PORT}:3000'
    volumes:
      - ../.env.test:/usr/src/app/.env:ro
    healthcheck:
      test: ['CMD', 'curl', '-f', '-s', '-o', '/dev/null', 'http://localhost:3000/health']
      interval: 0.5s
      timeout: 2s
      retries: 30
      start_period: 10s
    depends_on:
      tmdb-mock:
        condition: service_healthy
      yts-mock:
        condition: service_healthy
      trakt-mock:
        condition: service_healthy

  # TMDB Mock Service
  tmdb-mock:
    build:
      context: mock
      dockerfile: tmdb.Dockerfile
    env_file:
      - ../../.env
    environment:
      - DATA_DIR=/app/data
      - API_BASE_URL=https://api.themoviedb.org/3
      - API_AUTH_HEADER_IS_BEARER=true
      - API_KEY=$TMDB_API_ACCESS_TOKEN
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:80/health']
      interval: 0.5s
      timeout: 2s
      retries: 30
      start_period: 10s
    volumes:
      - ./tmdb/data:/app/data
      - test_tmdb_node_modules:/usr/src/app/node_modules
    networks:
      - test-network

  # Trakt Mock Service
  trakt-mock:
    build:
      context: mock
      dockerfile: mock.Dockerfile
    env_file:
      - ../../.env
    environment:
      - DATA_DIR=/app/data
      - API_BASE_URL=https://api.trakt.tv
      - API_AUTH_HEADER=trakt-api-key
      - API_AUTH_HEADER_IS_BEARER=false
      - API_KEY=$TRAKT_CLIENT_ID
      - API_SECRET=$TRAKT_CLIENT_SECRET
      - |
        API_HEADERS={"trakt-api-version": "2"}
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:80/health']
      interval: 0.5s
      timeout: 2s
      retries: 30
      start_period: 10s
    volumes:
      - ./trakt/data:/app/data
      - test_trakt_node_modules:/usr/src/app/node_modules
    networks:
      - test-network

  # YTS Mock Service
  yts-mock:
    build:
      context: mock
      dockerfile: yts.Dockerfile
    env_file:
      - ../../.env
    environment:
      - DATA_DIR=/app/data
      - API_BASE_URL=https://yts.mx/api/v2
      - API_AUTH_HEADER_IS_BEARER=false
      - API_KEY=none
      - DISABLE_VPN_CHECK=true
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:80/health']
      interval: 0.5s
      timeout: 2s
      retries: 30
      start_period: 10s
    volumes:
      - ./yts/data:/app/data
      - test_yts_node_modules:/usr/src/app/node_modules
    networks:
      - test-network

networks:
  test-network:
    driver: bridge

volumes:
  test_tmdb_node_modules:
    name: test_tmdb_node_modules
  test_yts_node_modules:
    name: test_yts_node_modules
  test_trakt_node_modules:
    name: test_trakt_node_modules
